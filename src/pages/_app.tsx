import "@/styles/globals.scss";
import { Box, Container } from "@mui/material";
import type { AppProps } from "next/app";
import Head from "next/head";
import { createTheme, ThemeProvider } from "@mui/material/styles";
import { Theme } from "@mui/system";
import TopTypography from "@/components/TopTypography";
import { Provider } from "react-redux";
import { store } from "../store"
import dayjs from "dayjs";
import 'dayjs/locale/ja';
import { AdapterDayjs } from "@mui/x-date-pickers/AdapterDayjs";
import { LocalizationProvider } from "@mui/x-date-pickers";



dayjs.locale('ja');

// カスタムテーマを作成
const theme: Theme = createTheme({
  palette: {
    primary: {
      main: "#00BCD4",
    },
    secondary: {
      main: "#C4EBF2",
    },
    text: {
      primary: "#000000",
      secondary: "#ffffff",
      disabled: "#9E9E9E",
    },
  },
  typography: {
    h1: {
      fontWeight: 500,
      fontSize: "48px",
    },
  },

  components: {
    MuiOutlinedInput: {
      styleOverrides: {
        root: {
          '&:hover .MuiOutlinedInput-notchedOutline': {
            borderColor: '#00BCD4',  // ホバー時のボーダーカラーを指定
          },
          dayOfWeek: {
            color: "red", // ここに希望の色を設定
          },
        },
      },
    },
  },

});


export default function App({ Component, pageProps }: AppProps) {
  return (
    <LocalizationProvider dateAdapter={AdapterDayjs}>
      <Provider store={store}>
        <Head>
          <title>TODO App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <ThemeProvider theme={theme}>
          <main>
            <Container maxWidth="lg">
              <Box maxWidth="sm" margin="0 auto">
                <TopTypography>Todo</TopTypography>
                <Component {...pageProps} />
              </Box>
            </Container>
          </main>
        </ThemeProvider>
      </Provider>
    </LocalizationProvider>
  );
}
